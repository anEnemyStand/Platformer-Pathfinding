<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
setup = 0;
l = 0;//Variable for the placement light id
NM_start(room_width,room_height)//Setup for required variables
NM_set_ambiance(make_colour_rgb(0,0,0));//Set ambiance color

bg = 'bac'

col = make_colour_rgb(255,170,50);

// Underscores _ placed in front to not interfere with 
// scripts that have same local variable names  
_radius = 900; // 0 -&gt; No limit
  
_intensity = 0; // 0 -&gt; 1
maxIntensity = _radius*4;
// max number = radius*4

_cutoff = 0.3;  // 0 -&gt; 1
maxCutoffAngle = 3.15;
// max number  = 3.15;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set boundaries for light variables

//NM_set_ambiance(make_colour_rgb(95,126,238));
NM_set_ambiance(make_colour_rgb(83, 106, 187));

//var rw = room_width/9;
//var rh = room_height/9;


// POINT LIGHT
//if (keyboard_check(ord('Q')))
 //      NM_set_PointLight((l mod maxLights), mouse_x,mouse_y, col, _intensity, _radius);

// SPOT LIGHT 
//else  
    //NM_set_SpotLight((l mod maxLights), room_width/2, room_height/2, col, _intensity, _radius, mouse_x,mouse_y, _cutoff);
    //NM_set_SpotLight((l mod maxLights), oSpotLens.x, oSpotLens.y, col, _intensity, _radius, oSpotLens.x+ oSpotLens.xrot,oSpotLens.y - oSpotLens.yrot, _cutoff);

// DIRECTIONAL LIGHT
//if (keyboard_check(ord('E'))){
  //7  NM_set_DirLight((l mod maxLights), mouse_x,mouse_y, col, _intensity, room_width/2, room_height/2);
    //NM_set_DirLight((l mod maxLights), mouse_x div rw * rw,mouse_y div rh * rh, make_colour_rgb(255,59,0), _intensity, room_width/2, room_height/2);
    
//}

/*
    
// Switch to next light
if (keyboard_check_released(ord('Q')) ||
    keyboard_check_released(ord('W')) ||
    keyboard_check_released(ord('E'))){
    l++;
    
    // increments intensity for light
    //_intensity+=0.1;
}
*/



if (keyboard_check_pressed(ord('P'))){
    if (room == rPointLightTest)
        room = rSpotLightTest;
    else if (room == rSpotLightTest)
        room = rDirLightTest;
    else
        room = rPointLightTest;
}
        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>NM_start(room_width,room_height)//Setup for required variables
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add textures to normal map
//Backgrouds should be drawn in the Draw Begin event (so that they're in the back)

// controls which background will be lit
/*
if (asset_get_index(bg)){
    //Add diffuse texture to the diffuse map
    NM_diffuse(1)
    draw_background_tiled(asset_get_index(bg),0,0)
    NM_diffuse(0)
}

//Add normal texture to the normal map
if (asset_get_index(bg + '_norm')){
    NM_normal(1,0)//If it's not rotated, put 0
    draw_background_tiled(asset_get_index(bg + '_norm'),0,0)
    NM_normal(0,0)
}

//Add specular texture to the specular map
if (asset_get_index(bg + '_spec')){
    NM_specular(1)
    draw_background_tiled(asset_get_index(bg + '_spec'),0,0)
    NM_specular(0)
}
*/

    //Add diffuse texture to the diffuse map
    NM_diffuse(1)
    draw_background_tiled(bac,0,0)
    NM_diffuse(0)


//Add normal texture to the normal map
    NM_normal(1,0)//If it's not rotated, put 0
    draw_background_tiled(bac_norm,0,0)
    NM_normal(0,0)

//Add specular texture to the specular map
    NM_specular(1)
    draw_background_tiled(bac_spec,0,0)
    NM_specular(0)
/**/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw FPS, number of lights and controls
/*
draw_set_colour(c_white)
draw_text(8,8,"FPS:"+string(fps_real))
draw_text(8,24,string(min(l,maxLights))+" light(s) and "+string(instance_number(oRider))+" actor(s)")
draw_text(8,40,"Left click to place lights")
draw_text(8,56,"Right click to place Actors")
draw_text(8,72,"Intensity: " + string(_intensity))

for(var j=0;j&lt;maxLights;j++){
    draw_text(8,room_height - 16 - (j*16),"[" + string(j) + "] = " + string(NMlights[j*numLightProperties]))

}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw lighting
NM_draw(0,0)//Draw result
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
