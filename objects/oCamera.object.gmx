<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Init Camera Variables
// zoom should get values like 1.4 1.7, 2.0, 0.5, etc.
// zoom only handles x values,then applies to y to keep the equal ratio
initZoomWidth = view_wport[0]/2;
initZoomHeight = view_hport[0]/2;
zoomStep = 25; // zoom in/out 25% each time button pressed
zoomPercent = 125; //50
targetZoomPercent = zoomPercent; // for lerp

maxZoom = 200;
minZoom = 50;
targetX = noone;
targetY = noone;
x = room_width/2;
y = room_height/2;

trackingSpd = 0.1;
zoomSpd = 0.3;
// zoom 125% for when actor's turn to move
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Camera zoom and zoom position in room

x = (lerp(x,targetX, trackingSpd));
y = (lerp(y,targetY, trackingSpd));

view_wview[0] = (initZoomWidth/ (zoomPercent/100));
view_hview[0] = (initZoomHeight/ (zoomPercent/100));

view_xview[0] = max(x - (view_wview[0] / 2), 0);
view_yview[0] = max(y - (view_hview[0] / 2), 0);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Update Camera target
if (instance_exists(oGame)){
    if (oGame.curActor != noone){
        targetX = oGame.curActor.x; //set object to follow
        targetY = oGame.curActor.y; 
    }
}

zoomPercent = clamp(lerp(zoomPercent, targetZoomPercent, zoomSpd), minZoom, maxZoom);






</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
